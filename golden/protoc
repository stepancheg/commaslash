#!/bin/sh
# @generated by commaslash
case "$(uname -sm)" in
    "Linux x86_64")
        test -x "${XDG_CACHE_HOME:-$HOME/.cache}/commaslash/3e866620c5be27664f3d2fa2d656b5f3e09b5152b42f1bedbf427b333e90021a/bin/protoc" && exec "${XDG_CACHE_HOME:-$HOME/.cache}/commaslash/3e866620c5be27664f3d2fa2d656b5f3e09b5152b42f1bedbf427b333e90021a/bin/protoc" "$@"
        test -x "${TMPDIR:-/tmp}/commaslash-$(id -u)/3e866620c5be27664f3d2fa2d656b5f3e09b5152b42f1bedbf427b333e90021a/bin/protoc" && exec "${TMPDIR:-/tmp}/commaslash-$(id -u)/3e866620c5be27664f3d2fa2d656b5f3e09b5152b42f1bedbf427b333e90021a/bin/protoc" "$@"
        ;;
    "Darwin arm64")
        test -x "$HOME/Library/Caches/commaslash/2b8a3403cd097f95f3ba656e14b76c732b6b26d7f183330b11e36ef2bc028765/bin/protoc" && exec "$HOME/Library/Caches/commaslash/2b8a3403cd097f95f3ba656e14b76c732b6b26d7f183330b11e36ef2bc028765/bin/protoc" "$@"
        test -x "${TMPDIR:-/tmp}/commaslash-$(id -u)/2b8a3403cd097f95f3ba656e14b76c732b6b26d7f183330b11e36ef2bc028765/bin/protoc" && exec "${TMPDIR:-/tmp}/commaslash-$(id -u)/2b8a3403cd097f95f3ba656e14b76c732b6b26d7f183330b11e36ef2bc028765/bin/protoc" "$@"
        ;;
    *) echo "unsupported pair: $(uname -sm)" >&2; exit 1 ;;
esac
set -e
case "$(uname -sm)" in
    "Linux x86_64")
        if ! unzip -v >/dev/null 2>&1; then
            echo 'command `unzip` not found' >&2; exit 1
        fi
        if ! sha256sum --version >/dev/null 2>&1; then
            echo 'command `sha256sum` not found' >&2; exit 1
        fi
        commaslash_dir="${XDG_CACHE_HOME:-$HOME/.cache}/commaslash"
        # Checking if we own the directory
        _commaslash_dir_x="$commaslash_dir"
        while ! test -e "$_commaslash_dir_x"; do
            _commaslash_dir_x="$(dirname "$_commaslash_dir_x")"
        done
        # If we don't own the directory, we will cache in a temporary directory
        if test "$(stat -f %u "$_commaslash_dir_x")" -ne "$(id -u)"; then
            commaslash_dir="${TMPDIR:-/tmp}/commaslash-$(id -u)"
        fi
        install_dir="$commaslash_dir/3e866620c5be27664f3d2fa2d656b5f3e09b5152b42f1bedbf427b333e90021a"
        temp_dir="$install_dir.temp"
        rm -rf "$temp_dir"
        mkdir -p "$temp_dir"
        trap "rm -rf $temp_dir" EXIT
        mkdir -p "$(dirname "$install_dir")"
        exe="$install_dir/bin/protoc"
        (
            exec 9>"$install_dir.lock"
            # It is OK to fail to aquire lock,
            # Because we generate unique names and rename atomically.
            # If we fail to aquire lock, we will download twice, but we won't corrupt.
            flock -w 120 9 || true
            if test -x "$exe"; then
                exit 0
            fi
            curl --location --retry 3 --fail --silent --show-error --output "$temp_dir/zip" https://github.com/protocolbuffers/protobuf/releases/download/v29.3/protoc-29.3-linux-x86_64.zip
            echo "3e866620c5be27664f3d2fa2d656b5f3e09b5152b42f1bedbf427b333e90021a  $temp_dir/zip" | sha256sum --check - >/dev/null
            unzip -qq "$temp_dir/zip" -d "$temp_dir/3e866620c5be27664f3d2fa2d656b5f3e09b5152b42f1bedbf427b333e90021a" >/dev/null
            if ! test -x "$temp_dir/3e866620c5be27664f3d2fa2d656b5f3e09b5152b42f1bedbf427b333e90021a/bin/protoc"; then
               echo "unzipped dir $temp_dir/3e866620c5be27664f3d2fa2d656b5f3e09b5152b42f1bedbf427b333e90021a does not have executable file bin/protoc" >&2; exit 1
            fi
            mv "$temp_dir/3e866620c5be27664f3d2fa2d656b5f3e09b5152b42f1bedbf427b333e90021a" "${XDG_CACHE_HOME:-$HOME/.cache}/commaslash"
        )
        # We have set up `trap` above, but `trap` is not executed on `exec`
        rm -rf "$temp_dir"
        exec "$exe" "$@"
        ;;
    "Darwin arm64")
        if ! unzip -v >/dev/null 2>&1; then
            echo 'command `unzip` not found' >&2; exit 1
        fi
        if ! shasum --version >/dev/null 2>&1; then
            echo 'command `shasum` not found' >&2; exit 1
        fi
        commaslash_dir="$HOME/Library/Caches/commaslash"
        # Checking if we own the directory
        _commaslash_dir_x="$commaslash_dir"
        while ! test -e "$_commaslash_dir_x"; do
            _commaslash_dir_x="$(dirname "$_commaslash_dir_x")"
        done
        # If we don't own the directory, we will cache in a temporary directory
        if test "$(stat -f %u "$_commaslash_dir_x")" -ne "$(id -u)"; then
            commaslash_dir="${TMPDIR:-/tmp}/commaslash-$(id -u)"
        fi
        install_dir="$commaslash_dir/2b8a3403cd097f95f3ba656e14b76c732b6b26d7f183330b11e36ef2bc028765"
        temp_dir="$install_dir.temp"
        rm -rf "$temp_dir"
        mkdir -p "$temp_dir"
        trap "rm -rf $temp_dir" EXIT
        mkdir -p "$(dirname "$install_dir")"
        exe="$install_dir/bin/protoc"
        (
            exec 9>"$install_dir.lock"
            # It is OK to fail to aquire lock,
            # Because we generate unique names and rename atomically.
            # If we fail to aquire lock, we will download twice, but we won't corrupt.
            lockf -t 120 9 || true
            if test -x "$exe"; then
                exit 0
            fi
            curl --location --retry 3 --fail --silent --show-error --output "$temp_dir/zip" https://github.com/protocolbuffers/protobuf/releases/download/v29.3/protoc-29.3-osx-aarch_64.zip
            echo "2b8a3403cd097f95f3ba656e14b76c732b6b26d7f183330b11e36ef2bc028765  $temp_dir/zip" | shasum -a 256 --check - >/dev/null
            unzip -qq "$temp_dir/zip" -d "$temp_dir/2b8a3403cd097f95f3ba656e14b76c732b6b26d7f183330b11e36ef2bc028765" >/dev/null
            if ! test -x "$temp_dir/2b8a3403cd097f95f3ba656e14b76c732b6b26d7f183330b11e36ef2bc028765/bin/protoc"; then
               echo "unzipped dir $temp_dir/2b8a3403cd097f95f3ba656e14b76c732b6b26d7f183330b11e36ef2bc028765 does not have executable file bin/protoc" >&2; exit 1
            fi
            mv "$temp_dir/2b8a3403cd097f95f3ba656e14b76c732b6b26d7f183330b11e36ef2bc028765" "$HOME/Library/Caches/commaslash"
        )
        # We have set up `trap` above, but `trap` is not executed on `exec`
        rm -rf "$temp_dir"
        exec "$exe" "$@"
        ;;
    *) echo "this code should not be reachable; $(uname -sm)" >&2; exit 1 ;;
esac
